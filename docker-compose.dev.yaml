services:
  frontend:
    build:
      context: ./Front/.
      dockerfile: ./Dockerfile
    image: frontend:latest
    container_name: frontend
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - PUBLIC_API_URL=http://localhost:3030
    depends_on:
      - api
  api:
    build:
      context: ./Backend/.
      dockerfile: ./Dockerfile
    image: backend:latest
    container_name: api
    environment:
      - RUNNER_TEMPLATE_FOLDER=tmp/runner_templates
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672/
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=my-secret-token
      - INFLUXDB_ORG=my-org
      - INFLUXDB_BUCKET=test-runs
      - MYSQL_DATABASE=stresssimple
      - MYSQL_USER=stresssimple
      - MYSQL_PASSWORD=securepassword
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - CONTAINER=true
    ports:
      - "3030:3000"
    depends_on:
      - influxdb
      - mysql

  agent:
    image: backend:latest
    command: ["npm", "run", "start:agent:prod"]
    container_name: agent
    volumes:
      - tests_data:/app/tmp
    environment:
      - RUNNER_TEMPLATE_FOLDER=tmp/runner_templates
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672/
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=my-secret-token
      - INFLUXDB_ORG=my-org
      - INFLUXDB_BUCKET=test-runs
      - MYSQL_DATABASE=stresssimple
      - MYSQL_USER=stresssimple
      - MYSQL_PASSWORD=securepassword
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - CONTAINER=true
    depends_on:
      - influxdb
      - mysql

  stubjs:
    build:
      context: ./stab-server/.
      dockerfile: ./Dockerfile
    image: stubjs:latest
    container_name: stubjs
    ports:
      - "3333:3333"
volumes:
  tests_data:
